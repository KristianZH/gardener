Running Suite: Seed Network Policies Integration Test Suite
===========================================================
Random Seed: 1555942276
Will run 78 specs

Running in parallel across 25 nodes

STEP: Creating namespace for Ingress testing
STEP: Creating mirror namespace for pod2pod network testing
STEP: Getting all network policies in namespace "shoot--i355448--shoot"
STEP: Mirroring Pod component=grafana,garden.sapcloud.io/role=monitoring,networking.gardener.cloud/to-dns=allowed,pod-template-hash=6977489cc5 to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod app=kubernetes,garden.sapcloud.io/role=controlplane,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-shoot-apiserver=allowed,pod-template-hash=6677b79768,role=addon-manager to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod app=kubernetes,garden.sapcloud.io/role=controlplane,networking.gardener.cloud/from-prometheus=allowed,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-private-except-metadata-cluster=allowed,networking.gardener.cloud/to-public-except-private-medatadata=allowed,networking.gardener.cloud/to-seed-apiserver=allowed,networking.gardener.cloud/to-shoot-apiserver=allowed,pod-template-hash=5b5bbf56c9,role=machine-controller-manager to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod app=elasticsearch-logging,controller-revision-hash=elasticsearch-logging-d5d9f964b,garden.sapcloud.io/role=logging,role=logging,statefulset.kubernetes.io/pod-name=elasticsearch-logging-0 to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod app=kubernetes,garden.sapcloud.io/role=controlplane,networking.gardener.cloud/from-prometheus=allowed,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-private-except-metadata-cluster=allowed,networking.gardener.cloud/to-public-except-private-medatadata=allowed,networking.gardener.cloud/to-shoot-networks=allowed,pod-template-hash=5dffcf4bf5,role=apiserver to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod component=kube-state-metrics,garden.sapcloud.io/role=monitoring,networking.gardener.cloud/from-prometheus=allowed,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-seed-apiserver=allowed,pod-template-hash=848b77b497,type=seed to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod app=etcd-statefulset,controller-revision-hash=etcd-main-5c758676cc,garden.sapcloud.io/role=controlplane,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-private-except-metadata-cluster=allowed,networking.gardener.cloud/to-public-except-private-medatadata=allowed,role=main,statefulset.kubernetes.io/pod-name=etcd-main-0 to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod app=kibana-logging,garden.sapcloud.io/role=logging,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-elasticsearch=allowed,pod-template-hash=94c6cc978,role=logging to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod app=kubernetes,garden.sapcloud.io/role=controlplane,networking.gardener.cloud/from-prometheus=allowed,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-shoot-apiserver=allowed,pod-template-hash=7b657d5764,role=scheduler to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod app=kubernetes,garden.sapcloud.io/role=controlplane,networking.gardener.cloud/from-prometheus=allowed,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-metadata=allowed,networking.gardener.cloud/to-private-except-metadata-cluster=allowed,networking.gardener.cloud/to-public-except-private-medatadata=allowed,networking.gardener.cloud/to-shoot-apiserver=allowed,pod-template-hash=5b9486c5fb,role=cloud-controller-manager to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod app=prometheus,controller-revision-hash=prometheus-864989b4cc,garden.sapcloud.io/role=monitoring,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-public-except-private-medatadata=allowed,networking.gardener.cloud/to-seed-apiserver=allowed,networking.gardener.cloud/to-shoot-apiserver=allowed,networking.gardener.cloud/to-shoot-networks=allowed,role=monitoring,statefulset.kubernetes.io/pod-name=prometheus-0 to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod component=kube-state-metrics,garden.sapcloud.io/role=monitoring,networking.gardener.cloud/from-prometheus=allowed,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-shoot-apiserver=allowed,pod-template-hash=6bf55f784,type=shoot to namespace gardener-e2e-mirror-network-policies-mvw8p
STEP: Mirroring Pod app=kubernetes,garden.sapcloud.io/role=controlplane,networking.gardener.cloud/from-prometheus=allowed,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-metadata=allowed,networking.gardener.cloud/to-private-except-metadata-cluster=allowed,networking.gardener.cloud/to-public-except-private-medatadata=allowed,networking.gardener.cloud/to-shoot-apiserver=allowed,pod-template-hash=5c9d9dbdf6,role=controller-manager to namespace gardener-e2e-mirror-network-policies-mvw8p
time="2019-04-22T17:11:25+03:00" level=info msg="Waiting for machine-controller-manager to be ready!!"
STEP: Mirroring Pod app=etcd-statefulset,controller-revision-hash=etcd-events-986d6c9db,garden.sapcloud.io/role=controlplane,networking.gardener.cloud/to-dns=allowed,networking.gardener.cloud/to-private-except-metadata-cluster=allowed,networking.gardener.cloud/to-public-except-private-medatadata=allowed,role=events,statefulset.kubernetes.io/pod-name=etcd-events-0 to namespace gardener-e2e-mirror-network-policies-mvw8p
time="2019-04-22T17:11:25+03:00" level=info msg="Waiting for grafana to be ready!!"
time="2019-04-22T17:11:26+03:00" level=info msg="Waiting for kube-addon-manager to be ready!!"
time="2019-04-22T17:11:26+03:00" level=info msg="Waiting for kube-state-metrics-seed to be ready!!"
time="2019-04-22T17:11:26+03:00" level=info msg="Waiting for elasticsearch-logging to be ready!!"
time="2019-04-22T17:11:26+03:00" level=info msg="Waiting for etcd-main to be ready!!"
time="2019-04-22T17:11:26+03:00" level=info msg="Waiting for kube-apiserver to be ready!!"
time="2019-04-22T17:11:27+03:00" level=info msg="Waiting for kibana-logging to be ready!!"
time="2019-04-22T17:11:27+03:00" level=info msg="Waiting for kube-scheduler to be ready!!"
time="2019-04-22T17:11:27+03:00" level=info msg="Waiting for cloud-controller-manager to be ready!!"
time="2019-04-22T17:11:27+03:00" level=info msg="Waiting for prometheus to be ready!!"
time="2019-04-22T17:11:28+03:00" level=info msg="Waiting for kube-state-metrics-shoot to be ready!!"
time="2019-04-22T17:11:28+03:00" level=info msg="Waiting for kube-controller-manager to be ready!!"
time="2019-04-22T17:11:28+03:00" level=info msg="Waiting for etcd-events to be ready!!"
time="2019-04-22T17:11:31+03:00" level=info msg="Waiting for kube-state-metrics-seed to be ready!!"
time="2019-04-22T17:11:31+03:00" level=info msg="Waiting for elasticsearch-logging to be ready!!"
time="2019-04-22T17:11:31+03:00" level=info msg="Waiting for kube-apiserver to be ready!!"
time="2019-04-22T17:11:32+03:00" level=info msg="Waiting for kibana-logging to be ready!!"
time="2019-04-22T17:11:32+03:00" level=info msg="Waiting for kube-scheduler to be ready!!"
time="2019-04-22T17:11:32+03:00" level=info msg="Waiting for cloud-controller-manager to be ready!!"
time="2019-04-22T17:11:32+03:00" level=info msg="Waiting for prometheus to be ready!!"
time="2019-04-22T17:11:33+03:00" level=info msg="Waiting for kube-state-metrics-shoot to be ready!!"
time="2019-04-22T17:11:33+03:00" level=info msg="Waiting for kube-controller-manager to be ready!!"
time="2019-04-22T17:11:33+03:00" level=info msg="Waiting for etcd-events to be ready!!"
time="2019-04-22T17:11:37+03:00" level=info msg="Waiting for kube-scheduler to be ready!!"
time="2019-04-22T17:11:38+03:00" level=info msg="Waiting for kube-state-metrics-shoot to be ready!!"
time="2019-04-22T17:11:38+03:00" level=info msg="Waiting for kube-controller-manager to be ready!!"
time="2019-04-22T17:11:38+03:00" level=info msg="Waiting for etcd-events to be ready!!"
time="2019-04-22T17:11:43+03:00" level=info msg="Waiting for etcd-events to be ready!!"
time="2019-04-22T17:11:49+03:00" level=info msg="Waiting for busybox to be ready!!"

SSS
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "app=kubernetes,role=apiserver" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-from-prometheus allow-kube-apiserver allow-to-dns allow-to-private-except-metadata-cluster allow-to-public-except-private-and-metadata allow-to-shoot-networks deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  kube-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] kube-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "app=kubernetes,garden.sapcloud.io/role=controlplane,role=controller-manager" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-from-prometheus allow-to-dns allow-to-metadata allow-to-private-except-metadata-cluster allow-to-public-except-private-and-metadata allow-to-shoot-apiserver deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  kube-scheduler
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] kube-scheduler
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "app=kubernetes,garden.sapcloud.io/role=controlplane,role=scheduler" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-from-prometheus allow-to-dns allow-to-shoot-apiserver deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  etcd-main
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] etcd-main
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "app=etcd-statefulset,garden.sapcloud.io/role=controlplane,role=main" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-etcd allow-to-dns allow-to-private-except-metadata-cluster allow-to-public-except-private-and-metadata deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  etcd-events
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] etcd-events
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "app=etcd-statefulset,garden.sapcloud.io/role=controlplane,role=events" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-etcd allow-to-dns allow-to-private-except-metadata-cluster allow-to-public-except-private-and-metadata deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  cloud-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] cloud-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "app=kubernetes,garden.sapcloud.io/role=controlplane,role=cloud-controller-manager" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-from-prometheus allow-to-dns allow-to-metadata allow-to-private-except-metadata-cluster allow-to-public-except-private-and-metadata allow-to-shoot-apiserver deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  grafana
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] grafana
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "component=grafana,garden.sapcloud.io/role=monitoring" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-grafana allow-to-dns deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  kibana-logging
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] kibana-logging
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "app=kibana-logging,garden.sapcloud.io/role=logging,role=logging" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-kibana allow-to-dns allow-to-elasticsearch deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  kube-state-metrics-seed
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] kube-state-metrics-seed
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "component=kube-state-metrics,garden.sapcloud.io/role=monitoring,type=seed" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-from-prometheus allow-to-dns allow-to-seed-apiserver deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  kube-state-metrics-shoot
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] kube-state-metrics-shoot
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "component=kube-state-metrics,garden.sapcloud.io/role=monitoring,type=shoot" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-from-prometheus allow-to-dns allow-to-shoot-apiserver deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  machine-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] machine-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "app=kubernetes,garden.sapcloud.io/role=controlplane,role=machine-controller-manager" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-from-prometheus allow-to-dns allow-to-private-except-metadata-cluster allow-to-public-except-private-and-metadata allow-to-seed-apiserver allow-to-shoot-apiserver deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "app=kubernetes,garden.sapcloud.io/role=controlplane,role=addon-manager" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-to-dns allow-to-shoot-apiserver deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  elasticsearch-logging
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] elasticsearch-logging
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "app=elasticsearch-logging,garden.sapcloud.io/role=logging,role=logging" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-elasticsearch deny-all]

•
------------------------------
Network Policy Testing AWS Components are selected by correct policies
  prometheus
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] prometheus
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Getting first running pod with selectors "app=prometheus,garden.sapcloud.io/role=monitoring,role=monitoring" in namespace "shoot--i355448--shoot"
STEP: Matching actual network policies against expected [allow-prometheus allow-to-dns allow-to-public-except-private-and-metadata allow-to-seed-apiserver allow-to-shoot-apiserver allow-to-shoot-networks deny-all]

•
------------------------------
Network Policy Testing AWS Mirrored pods kube-apiserver
  should allow connectivity to etcd-main
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to etcd-main
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: etcd-main is running
STEP: Get target pod: etcd-main
STEP: Checking for source Pod: kube-apiserver is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-apiserver to 10.223.130.103:2379

•
------------------------------
Network Policy Testing AWS Mirrored pods cloud-controller-manager
  should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-apiserver is running
STEP: Get target pod: kube-apiserver
STEP: Checking for source Pod: cloud-controller-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/cloud-controller-manager to 10.223.129.176:443

•
------------------------------
Network Policy Testing AWS Mirrored pods kube-apiserver
  should allow connectivity to etcd-events
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to etcd-events
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: etcd-events is running
STEP: Get target pod: etcd-events
STEP: Checking for source Pod: kube-apiserver is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-apiserver to 10.223.129.182:2379

•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-apiserver is running
STEP: Get target pod: kube-apiserver
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.130.150:443


• Failure in Spec Teardown (AfterEach) [1.743 seconds]
Network Policy Testing
/Users/i355448/go/src/github.com/gardener/gardener/test/integration/seeds/networkpolicies/networkpolicies_test.go:71
  AWS
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/seeds/networkpolicies/networkpolicies_test.go:358
    Ingress from other namespaces
    /Users/i355448/go/src/github.com/gardener/gardener/test/integration/seeds/networkpolicies/networkpolicies_test.go:390
      should block connectivity to kube-apiserver [AfterEach]
      /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

      Expected an error to have occurred.  Got:
          <nil>: nil

      /Users/i355448/go/src/github.com/gardener/gardener/test/integration/seeds/networkpolicies/networkpolicies_test.go:399
------------------------------
Network Policy Testing AWS Mirrored pods cloud-controller-manager
  should allow connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: cloud-controller-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/cloud-controller-manager to 169.254.169.254:80

•
------------------------------
Network Policy Testing AWS Mirrored pods grafana
  should allow connectivity to prometheus
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to prometheus
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: prometheus is running
STEP: Get target pod: prometheus
STEP: Checking for source Pod: grafana is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/grafana to 10.223.129.177:9090

•
------------------------------
Network Policy Testing AWS Mirrored pods etcd-main
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: etcd-main is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/etcd-main to 169.254.169.254:80
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to kibana-logging
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kibana-logging
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kibana-logging is running
STEP: Get target pod: kibana-logging
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.130.60:5601
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods etcd-main
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: etcd-main is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/etcd-main to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods etcd-events
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: etcd-events is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/etcd-events to 169.254.169.254:80
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-apiserver
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: kube-apiserver is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-apiserver to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to cloud-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to cloud-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: cloud-controller-manager is running
STEP: Get target pod: cloud-controller-manager
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.129.226:10253
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to machine-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to machine-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: machine-controller-manager is running
STEP: Get target pod: machine-controller-manager
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.130.191:10258
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to kube-scheduler
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-scheduler
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-scheduler is running
STEP: Get target pod: kube-scheduler
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.129.212:10251
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to kube-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-controller-manager is running
STEP: Get target pod: kube-controller-manager
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.130.189:10252
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-apiserver
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: kube-apiserver is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-apiserver to 169.254.169.254:80
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to etcd-main
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to etcd-main
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: etcd-main is running
STEP: Get target pod: etcd-main
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.130.187:2379
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods etcd-events
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: etcd-events is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/etcd-events to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to elasticsearch-logging
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to elasticsearch-logging
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: elasticsearch-logging is running
STEP: Get target pod: elasticsearch-logging
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.130.254:9200
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to kube-state-metrics-seed
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-state-metrics-seed
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-state-metrics-seed is running
STEP: Get target pod: kube-state-metrics-seed
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.129.211:8080
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kibana-logging
  should allow connectivity to elasticsearch-logging
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to elasticsearch-logging
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: elasticsearch-logging is running
STEP: Get target pod: elasticsearch-logging
STEP: Checking for source Pod: kibana-logging is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kibana-logging to 10.223.129.178:9200

•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to etcd-events
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to etcd-events
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: etcd-events is running
STEP: Get target pod: etcd-events
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.130.186:2379
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to grafana
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to grafana
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: grafana is running
STEP: Get target pod: grafana
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.130.58:3000
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.129.100:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to kube-state-metrics-shoot
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-state-metrics-shoot
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-state-metrics-shoot is running
STEP: Get target pod: kube-state-metrics-shoot
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.129.216:8080
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Ingress from other namespaces
  should block connectivity to prometheus
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to prometheus
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: prometheus is running
STEP: Get target pod: prometheus
STEP: Checking for source Pod: busybox is running
STEP: Executing connectivity command from gardener-e2e-network-policies-6m4k9/busybox to 10.223.130.9:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-controller-manager
  should allow connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: kube-controller-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-controller-manager to 169.254.169.254:80

•
------------------------------
Network Policy Testing AWS Mirrored pods kube-addon-manager
  should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-apiserver is running
STEP: Get target pod: kube-apiserver
STEP: Checking for source Pod: kube-addon-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-addon-manager to 10.223.129.176:443

•
------------------------------
Network Policy Testing AWS Mirrored pods cloud-controller-manager
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: cloud-controller-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/cloud-controller-manager to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-addon-manager
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: kube-addon-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-addon-manager to 10.223.130.102:9090


• Failure in Spec Teardown (AfterEach) [1.109 seconds]
Network Policy Testing
/Users/i355448/go/src/github.com/gardener/gardener/test/integration/seeds/networkpolicies/networkpolicies_test.go:71
  AWS
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/seeds/networkpolicies/networkpolicies_test.go:358
    Mirrored pods
    /Users/i355448/go/src/github.com/gardener/gardener/test/integration/seeds/networkpolicies/networkpolicies_test.go:405
      kube-addon-manager
      /Users/i355448/go/src/github.com/gardener/gardener/test/integration/seeds/networkpolicies/networkpolicies_test.go:414
        should block connectivity to kube-addon-manager [AfterEach]
        /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

        Expected an error to have occurred.  Got:
            <nil>: nil

        /Users/i355448/go/src/github.com/gardener/gardener/test/integration/seeds/networkpolicies/networkpolicies_test.go:425
------------------------------
Network Policy Testing AWS Mirrored pods kube-controller-manager
  should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-apiserver is running
STEP: Get target pod: kube-apiserver
STEP: Checking for source Pod: kube-controller-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-controller-manager to 10.223.129.176:443

•
------------------------------
Network Policy Testing AWS Mirrored pods kube-state-metrics-shoot
  should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-apiserver is running
STEP: Get target pod: kube-apiserver
STEP: Checking for source Pod: kube-state-metrics-shoot is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-state-metrics-shoot to 10.223.129.176:443

•
------------------------------
Network Policy Testing AWS Mirrored pods elasticsearch-logging
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: elasticsearch-logging is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/elasticsearch-logging to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-scheduler
  should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-apiserver is running
STEP: Get target pod: kube-apiserver
STEP: Checking for source Pod: kube-scheduler is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-scheduler to 10.223.129.176:443

•
------------------------------
Network Policy Testing AWS Mirrored pods grafana
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: grafana is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/grafana to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods prometheus
  should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-apiserver is running
STEP: Get target pod: kube-apiserver
STEP: Checking for source Pod: prometheus is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/prometheus to 10.223.129.176:443

•
------------------------------
Network Policy Testing AWS Mirrored pods machine-controller-manager
  should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to kube-apiserver
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-apiserver is running
STEP: Get target pod: kube-apiserver
STEP: Checking for source Pod: machine-controller-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/machine-controller-manager to 10.223.129.176:443

•
------------------------------
Network Policy Testing AWS Mirrored pods prometheus
  should allow connectivity to etcd-events
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to etcd-events
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: etcd-events is running
STEP: Get target pod: etcd-events
STEP: Checking for source Pod: prometheus is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/prometheus to 10.223.129.182:2379

•
------------------------------
Network Policy Testing AWS Mirrored pods prometheus
  should allow connectivity to cloud-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to cloud-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: cloud-controller-manager is running
STEP: Get target pod: cloud-controller-manager
STEP: Checking for source Pod: prometheus is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/prometheus to 10.223.129.174:10253

•
------------------------------
Network Policy Testing AWS Mirrored pods grafana
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: grafana is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/grafana to 169.254.169.254:80
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods elasticsearch-logging
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: elasticsearch-logging is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/elasticsearch-logging to 169.254.169.254:80
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods prometheus
  should allow connectivity to etcd-main
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to etcd-main
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: etcd-main is running
STEP: Get target pod: etcd-main
STEP: Checking for source Pod: prometheus is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/prometheus to 10.223.130.103:2379

•
------------------------------
Network Policy Testing AWS Mirrored pods prometheus
  should allow connectivity to kube-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to kube-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-controller-manager is running
STEP: Get target pod: kube-controller-manager
STEP: Checking for source Pod: prometheus is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/prometheus to 10.223.129.181:10252

•
------------------------------
Network Policy Testing AWS Mirrored pods prometheus
  should allow connectivity to kube-scheduler
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to kube-scheduler
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-scheduler is running
STEP: Get target pod: kube-scheduler
STEP: Checking for source Pod: prometheus is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/prometheus to 10.223.129.179:10251

•
------------------------------
Network Policy Testing AWS Mirrored pods prometheus
  should allow connectivity to kube-state-metrics-shoot
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to kube-state-metrics-shoot
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-state-metrics-shoot is running
STEP: Get target pod: kube-state-metrics-shoot
STEP: Checking for source Pod: prometheus is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/prometheus to 10.223.129.180:8080

•
------------------------------
Network Policy Testing AWS Mirrored pods prometheus
  should allow connectivity to machine-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to machine-controller-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: machine-controller-manager is running
STEP: Get target pod: machine-controller-manager
STEP: Checking for source Pod: prometheus is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/prometheus to 10.223.129.172:10258

•
------------------------------
Network Policy Testing AWS Mirrored pods prometheus
  should allow connectivity to kube-state-metrics-seed
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should allow connectivity to kube-state-metrics-seed
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-state-metrics-seed is running
STEP: Get target pod: kube-state-metrics-seed
STEP: Checking for source Pod: prometheus is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/prometheus to 10.223.129.173:8080

•
------------------------------
Network Policy Testing AWS Mirrored pods kube-addon-manager
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: kube-addon-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-addon-manager to 169.254.169.254:80
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kibana-logging
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: kibana-logging is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kibana-logging to 169.254.169.254:80
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kibana-logging
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: kibana-logging is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kibana-logging to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-scheduler
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: kube-scheduler is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-scheduler to 169.254.169.254:80
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-controller-manager
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: kube-controller-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-controller-manager to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-scheduler
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: kube-scheduler is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-scheduler to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-state-metrics-shoot
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: kube-state-metrics-shoot is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-state-metrics-shoot to 169.254.169.254:80
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-state-metrics-seed
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: kube-state-metrics-seed is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-state-metrics-seed to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-state-metrics-seed
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: kube-state-metrics-seed is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-state-metrics-seed to 169.254.169.254:80
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods kube-state-metrics-shoot
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: kube-state-metrics-shoot is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/kube-state-metrics-shoot to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods machine-controller-manager
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: machine-controller-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/machine-controller-manager to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods machine-controller-manager
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: machine-controller-manager is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/machine-controller-manager to 169.254.169.254:80
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods prometheus
  should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to kube-addon-manager
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking that target Pod: kube-addon-manager is running
STEP: Get target pod: kube-addon-manager
STEP: Checking for source Pod: prometheus is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/prometheus to 10.223.130.102:9090
STEP: Connection message is timed out


•
------------------------------
Network Policy Testing AWS Mirrored pods prometheus
  should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27

[It] should block connectivity to "Metadata service" (169.254.169.254:80)
  /Users/i355448/go/src/github.com/gardener/gardener/test/integration/shoots/gingko_utils.go:27
STEP: Checking for source Pod: prometheus is running
STEP: Executing connectivity command from gardener-e2e-mirror-network-policies-mvw8p/prometheus to 169.254.169.254:80
STEP: Connection message is timed out


•

Summarizing 2 Failures:

[Fail] Network Policy Testing AWS Ingress from other namespaces [AfterEach] should block connectivity to kube-apiserver
/Users/i355448/go/src/github.com/gardener/gardener/test/integration/seeds/networkpolicies/networkpolicies_test.go:399

[Fail] Network Policy Testing AWS Mirrored pods kube-addon-manager [AfterEach] should block connectivity to kube-addon-manager
/Users/i355448/go/src/github.com/gardener/gardener/test/integration/seeds/networkpolicies/networkpolicies_test.go:425

Ran 75 of 78 Specs in 44.138 seconds
FAIL! -- 73 Passed | 2 Failed | 0 Pending | 3 Skipped


Ginkgo ran 1 suite in 47.978525936s
Test Suite Failed
